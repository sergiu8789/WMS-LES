#*#START***********************************************************************
#
#  $URL: https://athena.redprairie.com/svn/prod/mtf/trunk/config/mtf_server_config.properties $
#  $Author: smedic $
#
#  Description: MTF server configuration properties file
#
#  $Copyright-Start$
#
#  Copyright (c) 2010
#  RedPrairie Corporation
#  All Rights Reserved
#
#  This software is furnished under a corporate license for use on a
#  single computer system and can be copied (with inclusion of the
#  above copyright) only for use on such a system.
#
#  The information in this document is subject to change without notice
#  and should not be construed as a commitment by RedPrairie Corporation.
#
#  RedPrairie Corporation assumes no responsibility for the use of the
#  software described in this document on equipment which has not been
#  supplied or approved by RedPrairie Corporation.
#
#  $Copyright-End$
#
##END*************************************************************************/

###############################################################################
#
# Installation Instructions:
#
#    1) It's recommended that this file be backed up, just in case a mistake 
#       is made. Recommended location is %LESDIR%/data. To point to a custom
#       server configuration properties file, pass -c argument followed by 
#       the target file to the MTF server startup command.
#
#    2) Once backed up, the attributes of this file can be configured for the 
#       host system. 
#
#    3) Port listener number for the MTF server instance can be configured here
#       via terminal.port property.
#       
#          NOTE: If the port listener number is configured at command line, 
#                that configuration will always override the terminal.port
#                property in this file.
#
#    4) Network protocols can be set here. We currently support TELNET, and 
#       SSH2. Only one of these protocols can be activated at a time.
#       If SSH2 is a desired protocol, then the terminal.ssh2 flag must be 
#       set to true. If TELNET is a desired protocol, terminal.ssh2 flag 
#       must be set equal to false. The protocol can also be overridden at the 
#       command line using the -N argument followed by the desired protocol.
#
###############################################################################

#--------------------------------------------------------------------------
# Daemon Configuration Properties
# 		Specifies the log configuration and the listeners to be started.
#--------------------------------------------------------------------------

#--- syslog settings
syslog=off
syslog.media=terminal
syslog.path=logs/system_log
syslog.stampformat=[dd/MM/yyyy:HH:mm:ss z] '[SYSTEM] '

#--- debuglog settings
debuglog=on
debuglog.media=terminal
debuglog.path=logs/debug_log
debuglog.stampformat=[dd/MM/yyyy:HH:mm:ss z] '[DEBUG] '

#--------------------------------------------------------------------------
# Listener Configuration
#--------------------------------------------------------------------------

# Comma separated list of listeners
listeners=terminal

#--- Basic listener and connection management settings
terminal.port=4520
# Number of connection attempts which the Java socket
# will accept before turning away request to connect
terminal.floodprotection=100
# Number of accepted connections against the MTF 
# server that will be allowed before turning away
# requests to connect - these rejected connections
# then go into the maxqueued list until that is full
terminal.maxcon=200
# Number of accepted connections that will be queued 
# for further execution when the maxcon value has been 
# fulfilled against the server
terminal.maxqueued=1

# Number of listener thread to spawn at startup
# These threads DO NOT shut down - they will exist
# for the uptime of the MTF server
terminal.portListenerPoolSize=5

# SSH2 Protocol Configuration
terminal.ssh2=false
terminal.keystorefile=c:/dev/trunk/mtf/config/Identity
terminal.keystorepwd=mtf
# Used only for SSH connections this value determines the interval
# the SSH server will wait to establish a connection. 
# This value is in seconds (s). 
terminal.ssh_banner_wait_time=15

# During SSH login the user will be prompted for a 'login as'
# if the session is not configured to automatically provide this
# information.  This value controls how long a connection attempt
# is allowed wait, in seconds (s), for this input before timing out.  
terminal.ssh2AuthenticationWaitTime=120

# Specify the default socket timeout period in milliseconds 
# for initial negotiation.  This is different from the vendor response.
# This controls how long we allow for the initial handshakes to
# take place.  Used by ssh2 protocol configuration.
terminal.ssh2NegotiationWaitTime=300000

# SSL-TLS Protocol Configuration
terminal.ssl-tls=false

# Timeout settings for connections (defaulted to 2 hrs) - i.e. this refers to 
# the total allowed inactivity (idle) time before a client connection will
# get disconnected and cleaned up:
#
#     inactivity (idle time) = time_to_timedout + time_to_warning
#
# Description of properties:
#
#     time_to_timedout          -   this refers to the period of time in milliseconds when 
#                                   a connection has timed out due to being idle. At this
#                                   time, the warning period starts (time_to_warning)
#                                   before a connection is disconnected from the server.
#                                   The warning message will not get displayed to the
#                                   user, it will only get written to the log file.
#
#     time_to_warning           -   this refers to the period of time in milliseconds 
#                                   after time_to_timedout has elapsed and during which
#                                   a client connection is being warned that is about 
#                                   to be disconnected due to inactivity. The warning 
#                                   message will not get displayed to the user, it 
#                                   will only get written to the log file.
#
#     terminal.heartBeatEnabled -   this is a boolean value to determine whether "Are You There"
#                                   signal has to be sent from MTF server to client 
#
#     time_to_send_heartbeat 	- 	this refers to the period of time in milliseconds after
#                                   which a heart beat has to be sent from MTF server to
#                                   client. The signal will not be displayed to user , it will 
#                                   be indicated in the log file and while there is any interruption in
#                                   connection because of network outage or any other issue then we get connection 
#                                   broken event in server side with IO exception
#
# NOTE: 3600000 milliseconds = 3600 seconds = 60 minutes = 1 hour
terminal.time_to_timedout=3600000
terminal.time_to_warning=900000

#Heartbeat Signals to be sent to Client
terminal.heartBeatEnabled=true
terminal.time_to_send_heartbeat=60000

# Debug set 20 secs, 10 secs
#sample.time_to_warning=20000
#sample.time_to_timedout=10000

# Housekeeping thread active every 1 secs
terminal.housekeepinginterval=1000

# Input Mode
# "character": per character transmission
# "line": the infamous line mode transmission

terminal.inputmode=character
#terminal.inputmode=line

# Login shell
terminal.loginshell=terminalShell

# Connection filter class
terminal.connectionfilter=none

# Specify RF message delay and period
terminal.rf_msg_delay=5000
terminal.rf_msg_period=5000

# Specifies the interval of time in milliseconds to elapse between scheduled
# repeated executions of a timer task that will be polling MOCA for any changes
# in the rf_term_mst database table.  If it's determined that new devices have
# been configured, then newly added terminal configs will be cached at MTF server
# level and considered as valid. In addition, if the system detects that devices
# have been changed or removed, then the timer task will attempt to refresh affected
# cache entries as long as there is no registered session associated with a device
# in question. 
# By default, the timer task is going to be running every 2 minutes (i.e. 120000 ms).
# This feature can ONLY be disabled if this property is set to 0. If the property
# is not defined or commented out in the configuration file, MTF is still going
# to use default value of 2 minutes to ensure that the feature is enabled for
# customers that are upgrading and whom may have already created a custom server
# configuration file. Similarly, if an invalid non-numeric value is defined,
# we're going to also use the default to ensure feature is enabled to minimize
# server's downtime as much as possible due to config changes since this is something
# that most users would prefer.
terminal.rf_term_config_cache_refresh_interval=120000

# Specify if the terminal beeps are enabled or not.  
terminal.beepsEnabled=true

# Specify the default socket timeout period in milliseconds 
# for telnet negotiation.  This is different from the vendor response.
# This controls how long we allow for the initial telnet handshakes to
# take place.
terminal.defaultNegotiationTimeout=1000

# Maximum number of times a single form may loop between interactive states
# during form processing before a terminal session will be shut down.
# A value of -1 disables this feature, but it is not advisable to turn off
# this feature because excessive looping can cause thread to spin out of
# the control. Spinning thread will negativelly affect the performance
# of the MTF server process and contribute to CPU spikes on a production
# server.
terminal.formInteractionLimit=5000

# Threshold of time in milliseconds (ms) between interactive states
# during form processing. Multiple interactive form states seen within
# this time threshold will be counted towards the formInteractionLimit.
terminal.formInteractionThresholdTime=10000

# Maximum number of general Exceptions that can be generated during form
# processing before the terminal session will be shut down.
# A value of -1 disables this feature, but it is not advisable to turn off
# this feature because excessive looping can cause thread to spin out of
# the control. Spinning thread will negativelly affect the performance
# of the MTF server process and contribute to CPU spikes on a production
# server.
terminal.formExceptionLimit=10

# Threshold of time in milliseconds (ms) between general Exceptions during
# form processing. Multiple Exceptions seen within this time threshold will
# be counted towards the formExceptionLimit.
terminal.formExceptionThresholdTime=30000


# The value of terminal.rightJustifyEntryFieldText can be configured to true
# to allow right justification of display fields.
# Current approach will provide RIGHT justify for all entry fields as a 
# configurable switch in the MTF engine and add a field level property for 
# entry fields. 
# The possible values for terminal.justifyEntryFieldText are
# Right -All fields in all forms will be right justified.
# Left/null/empty/any string other than Right -
# All fields in all forms will be left justified.Here default justification 
# of left will be used in case 
# of invalid justification options.
terminal.rightJustifyEntryFieldText = false

#--------------------------------------------------------------------------
# Shells configuration properties
#--------------------------------------------------------------------------

#List of shells available and defined below
shells=terminalShell

# Login shell implementation
shell.terminalShell.class=net.wimpi.telnetd.adapter.mtf.LoginShell

#--------------------------------------------------------------------------
# Terminals configuration properties
#--------------------------------------------------------------------------
#       Specifies the available terminals, their implementations
#       as well as their aliases.

# List of terminals available and defined below
terminals=vt220,ansi,windoof
#terminals=vt220,vt100,ansi,windoof,xterm

# VT220 implementation and aliases
term.vt220.class=net.wimpi.telnetd.adapter.mtf.terminal.CVT220
term.vt220.aliases=default,color-xterm,xterm-color,vt320,vt220,linux,xterm,ansi,vt100,vt52,vt102

# VT100 implementation and aliases
#term.vt100.class=net.wimpi.telnetd.io.terminal.vt100
#term.vt100.class=net.wimpi.telnetd.adapter.mtf.terminal.CVT100
#term.vt100.aliases=vt100-am,vt102,dec-vt100

# ANSI ansi implementation and aliases
#term.ansi.class=net.wimpi.telnetd.io.terminal.ansi
#term.ansi.aliases=ansi
term.ansi.class=net.wimpi.telnetd.adapter.mtf.terminal.CVT220
term.ansi.aliases=ansi

#--- WINDOOF implementation and aliases
#term.windoof.class=net.wimpi.telnetd.io.terminal.Windoof
#term.windoof.aliases=
term.windoof.class=net.wimpi.telnetd.adapter.mtf.terminal.CVT220
term.windoof.aliases=

# XTERM implementation and aliases
#term.xterm.class=net.wimpi.telnetd.io.terminal.xterm
#term.xterm.class=net.wimpi.telnetd.adapter.mtf.terminal.CXterm
#term.xterm.aliases=

#--------------------------------------------------------------------------
# Comma-Delimited Constants File List
#--------------------------------------------------------------------------
constants_file_list=com.redprairie.mtf.MtfConstants,com.redprairie.mtf.MtfErrors,com.redprairie.wmd.WMDConstants,com.redprairie.wmd.WMDErrors

#-------------------------------------------------------------------------- 
# Monitoring Properties
#-------------------------------------------------------------------------- 

# Specifies if probing is enabled or disabled
monitoring.mad-probing-enabled=true

#--------------------------------------------------------------------------
# Distributed Tracing Properties
#--------------------------------------------------------------------------

# Specifies if Distributed Tracing is enabled
monitoring.trace-id-enabled=true
# Specifies Collector URL for Jaeger
monitoring.jaeger-collector-url=

#-------------------------------------------------------------------------- 
# MTF Form monitoring Properties
#-------------------------------------------------------------------------- 

# Specifies if form monitoring is enabled
monitoring.form-monitoring-enabled=false

# The form monitoring framework works with an INCLUDE filter.
# The following settings are used to configure which components are monitored.
monitoring.field-hooks=
monitoring.form-hooks=
monitoring.dialogues=
monitoring.virtual-key-commands=
monitoring.timers=

# The location of the Jolokia Monitoring Jetty Server Config File.
# monitoring.server.config.loc=